{"hash":"3a3e888f9534fbd8b200b8d81515dac4a6d6c9f1","data":{"post":{"id":"4bfe506bf882d1a09e1eb2bea63ebc1f","title":"Your Second Firefox extension in Kotlin","content":"<p>This post is the sequel <a href=\"/blog/kotlin-first-webextension/\">Your First Firefox (Web)extension in Kotlin</a>. You should read it for the requirements and the basic setup of a Firefox extension written in Kotlin.</p>\n<p>In this post we are going to rewrite <a href=\"https://developer.mozilla.org/en-US/Add-ons/WebExtensions/Your_second_WebExtension\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Your second extension</a> from the Mozilla tutorials in Kotlin. The extension consists of a toolbar button with a popup that allows you to replace the current tab’s content with an image of a beast.</p>\n<p>The interesting bit about this addon is that, unlike the previous one, it needs to interface with the WebExtensions API. We will explore two possibilities to do this, one type safe but a bit tedious way and one dynamic way that involves less typing.</p>\n<p>Note: You can get the complete project over at <a href=\"https://github.com/cypressious/second-firefox-extension-kotlin\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://github.com/cypressious/second-firefox-extension-kotlin</a>.</p>\n<h2 id=\"the-extension\"><a href=\"#the-extension\" aria-hidden=\"true\"><span class=\"hashtag\"></span></a>The extension</h2>\n<p>The main entry to our extension is a toolbar button. When clicking the button, a popup is shown where you can select the beast you want to show.</p>\n<p><img class=\"g-image g-image--lazy g-image--loading\" src=\"data:image/svg+xml,%3csvg fill='none' viewBox='0 0 1219 558' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e%3cdefs%3e%3cfilter id='__svg-blur-0ffcea540a811eb462bac7264d3e2a22'%3e%3cfeGaussianBlur in='SourceGraphic' stdDeviation='40'/%3e%3c/filter%3e%3c/defs%3e%3cimage x='0' y='0' filter='url(%23__svg-blur-0ffcea540a811eb462bac7264d3e2a22)' width='1219' height='558' xlink:href='data:image/png%3bbase64%2ciVBORw0KGgoAAAANSUhEUgAAAEAAAAAdCAIAAACVG/2gAAAACXBIWXMAAAsSAAALEgHS3X78AAASsUlEQVRYw61XZ1CbV5vlz87s7Pcl/uJG7MRxwY3YuNFFxxR1esf0XkwHUSQQKiAEEqj3hrr0SkKIbgyO7YQk2E5MXGPH2Li32ImT2Ilj7xUk2czO/tmZT3PmztWAXp1znvM898pl707/3buCFZaT567e/%2bKr62cWFr9cuHHm4s0z3yyeu7R09uKt%2bYXFCzceHjv1FSwgZtfOoO1uAU5s%2bxPLb3e4Bf474HyU21bY35/8F9y2wXbuCAIA%2b30eEdu2%2brvvCtm5PdAlBpONiSmanbt8/4dX3z94%2bPzJ908ePn549/6T%2b4/A%2bvDuvaXFW8%2bfPbt2/UZ2Fg6DLoGj8xHoAiSmEIEpRGILnRt0QTQy7/8N1N%2bRD18GeBQmtgQ8c%2bWxfwcKWxibUIaNLY2JL8vIqsPEFsfEl2LjSlxe/vD09evff//t199/e/XgwYMnT57cuXP37du3b968efvn683bN7/9/NuV5xfvvbr9%2buVvv/zy0w/Pnv3w/bPn3z/78ccffv75p7f/jtfr169fvXx58eLFR48eff/06d//9Pvvb169%2bvXbb6/du3d/aWlpenr67NmzL3588fjxE5dLF7%2b58t2tK9dvXr62uHDx6sLFK6c/P3P91r3ri0vf3bx9ffH2jVt3ri0uXb16c%2bbCyc%2buzl%2b%2b/N3Cxcvnvr7w9flL82cWzny1cP7C5cWbd27ccv4nwOL/hZsAS/8bt5buOnH7DyzeXAJ1nj/71aXLVy9f%2bXbpzr2l2/duLt0Fn73/4NHPP/185/adp0%2bfPnjwcOH8%2ba/PL1y9duPxk6cueyMStoWm7AhP2Rme6n447eOIDF90NgyZfBCZvS8izQeds%2bdw6v6o9ANRGd7wPG94ziFEphfiiA8q2weV5YfO9kPn%2bIE98giAHyrLH5UFQ2cFYrICsdnBywiJyQ6LzTkcB5AbEZ8bGZ8bnZiHSMpDJuejUgowqYWY1IKYtMK4jOK4jJKMwqqMgqqDwdhQVFpSdml8ZklyTmVUXBaDL3v09u3C48fnHz2%2b9Pz5w7dvp%2bfOoFOLPv/yjMsGz4h390e/dwC%2b5iB83UH4e/vhiLTmzMJGAkNM5SgGodFKfO%2bGQ8hNPpgPfVAf%2baI3%2b2IAtvhhtvpht/lh3fyx22ExO2CxOwNidwXE7Q6K%2bzgobk9w3N6Q%2bL2hCUGYI5FJ%2bX7RaYfCE4EGZEphVHwuYB%2bOzYRFJyGT8tGpBZi0gti0ImRCTggytamjOxyTFhSdWN9G2eMXNTQyVdtC9ghAcGWab1//OnzhgvazucGTp869eGE5/gksKnli6rjLFl/4Oi/UBm8A9EYfzCYf1JawnG1hOcDgwPjCoPgiL1TWVv%2bYbbBYN1js9gAndgTGAewMit8VFO8eDJDgHpLwcUjC3pBEj9DEfWGJ%2b8OTDoQnHTyc5Bud6gdP841K8Y1KDkCmBaMygtHpIej0YLBHpoVhMg7HZEbGHYmOy46MBWsWMjFn24GQPf7RXqHYXd4RpTVt8IQcv4h4CoP71fVrjtOnZ86dGz19eu7yJfPoZDA6Y3zymMumlKa1KYQP0zo2pRO3ZHZuzSJtP9K%2bM4u4I6tzVxbRPavTI5fiVUL3KaH7lfX6l/cFVvQFVTJCq/rDa/qjalmIejamgY1t5MbheEktvJRWfgZekNUuzCWKi0jiYrK4giqppsnqe%2bW4PnkrU9HBUpJ56m6hpleiZcr0bKWBN2gWaSwyw5BYa25o79q8P3CNu/%2bqrfs9oxIJdHYvX87TmMdPfPrwxY%2bzX34xNTtrGz%2b2%2bPjR/IWrLQzZ5/NnXT7MJrpm0zbl0rYU0N0KencW9e0p7d9bxjpYyfau4vrW8AD8angBtfygekFIAz%2b8UXgYJ4puFiNbJVi8LLZdntShSOlUpZNURyiDuV3qApqmhK6rZOiq%2b/X1LAOOY2zjmTqEZrLEQpNZGEorSz3M1Q2LjCMyaFRlG9cMT%2bpHjhlHpwctIznl9Vv9EO4Rqdv9EFs8D%2b8NgNcSugxjMzNz82cuXDj22Wcn5r%2bcnpv79KtzJ8%2bc75ZabizdcdmW0/lBTs/W/J4V9u7FDI/Sgf3lrENAwFGOXzUXVsMNrOUF1fFD6vlhjYLwJlEkTgRvliDbnALigQCiIpWkzCSrspwCBgtpmlK61imAqa8f0OPYhjaesV1gIouhbilEV1j6B21srV2gHxabHECD0joGZJgnZtt6WJt9otzgOW6ogg8jMjcdTt8QmNhE5wOF03PzYFR/ev6b41/Mj5389OHLVwvXl8gi483b91y255E%2byOt1K1xmX/I/7L2OcryrOH94X8cPrheENgjDm4QROHF0swTRKkW3SWMJ8oQOeTJRmUpWAvtzqOo8mrqoR1PWCyqgr2HqG1j6lQoQhCbSHwKsTJWNrbbzdHah0SExj8ihUYVl1Dg%2bU9rYsd4PsykiY3Nk1vshye8HJ66CJVR2cdT2yYmTcwuXvzgxN356furkl5PzX8%2bePnu2S2pZXLrr4p5P2VLQt8IehGd/2cDBSpZXFcdnOT%2bwWn5AvVMAYH%2b4SRTRLI5ukSBbpSi8DEuQx3fIE532q9IpqizqSn7UJXRtWR8QYKgZMDSACHGdAtoFZpLYAr6yR25hLAvgLBdBZHSAOkhMDo19Es8UrfbBbAhO2hCS4hqU%2bH5I0iofbFZzt9w6Nnn6sze/z5%2bbl5w9o1g4r375y8zFa%2bcoYsvi7bsuHoVUt0Lm7hLGx6X9HmUDBypY%2bysGQAX8gfd1fNhy9EMbhaGNgrBGIbx1hb00hiCL71AkdCpSSKoUkB9gfxewXwPsL%2b3TlTP0Vf2GOpaxiW1o4ZnwAmcPEMUQRQbRFJZe5XIRtM4iCAzDQuOw0GBX2SZqqex/7o9c54/ZGJa2LiBuDSz2n14oVFkr6JaJk0DAjQcPv7h9Z%2b7Ovc9fv756/uo3nSJoWUBR145ipnspc0/5gEcFa18FK7hJGNUicdpfJ4hskYQ1ioAGBF6aQtXAW8TA%2b3iiEqQ/jqhI6HAir0eXS9M6I9StLuzRFPdqK5kGIKCmX9/INjRxjK0gQqACUitFClElZiCAo3UADSz1EFszxNOCatik0FhBc9d/7vR/zwu%2bITjZFRb3flDiKm%2b0f0al0OAQGkZUQ9OD9hmVfVZmmxaaphgqO5gKi0v3XA6UdO8uZe0tH9hXwT5QyQFrOk1HUI6Vs6Fq4XCdwF4tsAE0SkY6BqdaZY68PkObdAQnGu5QjZFU4zTtJE17rI5rpesmGYaprsExjvk4AMswxTdNia0zQui41DYjG5qRD82ohmf0E6eEpjHtyKxxbNY0dsI8eQqa%2bATMGduxk70SfVoFDpFbtcY/ztUz%2bt3dfu/5YjyweRydHUhlKC19CjDHzBSpiSQyEvj6ZQF3XQ6W9uwpYx2oZB04yjlUxT1UzUV1KPKZxgKmsZQF5fYZSljmcg5UzbcWD5hapY5UqrqQYcTLRrr0UwTZCF7qaBHZqzhWDnS8XWbHi21yxymOabpLOcI1TvZpxtiGSZZ%2bnGecFEPHeMZx68yc2DwhMI9rHNNK25R16jQ0eVI9PG0amxVobVlVzf4J%2bav9sOs8o1a7w1btP%2bwWkdojMwMBoGKgeehKC01uAZVsFxrJEqtTgFd5L3D90FE2oO5Ty/Os4saT1QkUdShOHI6TRLVJ4XgZAi%2bPIaqKB6D0bq0TVE0adTCfrsuh6TKdegyt0uF6LlTGNDQLhxp4EEEyRFWNEUQ2HN%2bMF1jaRVa8EHylhSKzMdR2ls4hMk8yBofoSitX71BYJgE/gXEsp75zawDqX16IdbDY1d6IdT6I9w5GbICh8SzFgNoO5m%2bPwtott1ClEEkCEQTGTiAA9IBfZe%2bBo1yvao53Dc%2b/TuBZxQGWEwcnKNqpJKqmWTZK1UySNce6tFNs2ydE5Wi37hiITTUH6lRN8Kwn%2bo3HmYbpfuM0C5oWWmdlw6dAflSjJ/mWGYXjE4n9BMiPcfJ0v2FSYj1uOzZnmDytnzhpOz6nH/3EOH7CPjOndcxajp1yzH5B5SrQeVW7IlPePRS91gexzhu%2bxjN6jTe8ppvbrx3ulkPAe6rMQpJCRDHwxdS5UoHAqj7Pap5vLc%2bvDkxMYWCDAAEmDEmVSB5E4GVJFHVGtzarR5dJ0%2bb3GUG/5vXqgeX5dH1Rn7FywHx0wFTHharYpka%2btVcz3iq0EST2VmC52NYptXdKh0hSG005TJEPdSuGJdZpITQpskwy1MMD6mGOboSjH2HrhsFEEkETSRUtuyOTNwXFAfvXeiPWgyL4IlcdjCzE9/VrR6hSc5fMQpZBnRKoQ2Ru45uIYusNp4BqhncNH7CHAfaNwpAmUXizJBovi2qVIQkKFEGBJihiiMqEzsEEogo0QCqQRNXm9Oizabpcug4oKezVlfUbK5jGMoahnGksZxqODhhqWEYwRhu4pmaeuYUHtQkteKGlXWzplAALAaxkmZUiAycD1CWDADnmoN0nPv8/dgW4wrDr/VAgP%2bt9EGu9ov9rb0h6PYWhGSFLTGSZpVNqAeO4XWRu/UtASG2/b50woEGwwh4ANEAVf6hoACpnW8o5lhrBUDXP1iAYahAO4cSOBuEw2FRyLKCh8dLhDvlIp2KEpByt51oq%2bo3VLFMN21zHMTdwTI1ccxPP1MJ3sieIrKATiBInAxKgLgewgRWYCkCVWuhK2yFM1jseoa7%2bmHW%2bKFdf9HsfB7j6IFd7wjFlrT1qB0kKBrGlUwzshwhCCBwvHUAA6IHwugEYmPRNwlCcKBwnjmiRRLVK4W0yNEGO7VDGEZWJpMFEkiqZMphGUaeTNZnd2iMgVN3a3B5gv7awT1/M1JcC7/uNR1lAgLmWba7nmBq45kaeuYlvbhFArSsCxFbwlURAQua0fwUUOUiFE1SZ2QOR8Y5H2Hpf1HowhXxQ72w5sN4LvtoHGZZd26W0A%2bNBeIhiMBJAMVcEWJwCIhtYQU3iMJzocLMYHFvRbVIUQYolSGPBNaFTkUxSppCVaRRlBkWVQVVldKkzuzXZNMBem0fXFvRqixiAvXGFfdWf9jfyICf4pmY%2b1CK0tIqcAggiEKE/iyC1/KVhZU8UmXZHp/1jT7CrH9oVFgOwISj%2bfRj2X55wr8QiqnyIKHKy7wCPEkJ4obkZXE9WKgBvZIc2A%2bPFwHjQtWiQfoImot0IJ5qRJDOaDGEplliKNZZqSeiCjtB02T1O9vl/sNeVLue%2bYgAIMIH81P7hPdTEh5qXvXc2tNN%2bG0CHBHS2tVPmTBFJZvlLAIgTgaffEoj5hzsMtO9aHxRI/1ofJNi/eyDSHXGELLOB5ADLgQttQnPb3wWgcJyIVhm8TYrEyzAEGapd1drVLqOXCGlFYnqxhF4M9lJ6sZJRxmM0FPSolo3XFfbpioH3TCf7ymX2YBDVcEz1XDM4B4AG0L6NPFM9x9DAMTZxTDhnN6/A3CowNvMMbQLQHmDj3LcITPX9g3vgRzbCsJtDkjaHJIN1W1jK9vAU0AybQxOA5cvsrSv2twmAACNhRQCmhQdmDoogw7bL4zrkyA7dBDP%2bLX/jS03kr%2brAXzWhrwYDX%2bmiXot33hrYV06X5vcZihm6EqahlOlMzt/Z13JNDcve17GN4CKE40N09XiPapQksVPlDqnjk26Vg64ZI8ntveqRDom1S%2bkAk7dXM8rQjoF4wFKrgjOqo/KawnObwrIbvZMqfZKPukWkbwzANrI1RKmNAEaZCHJWQAD9UQEwheLxPHS7IpYoj%2b9UJJHkWLJ%2blJn0mvfRD4qgF3Lfn5TBLxSwF%2bqIX4Tu34FLap%2b8iGkqY%2brBwFmOjbGKbaxmA%2brmOh5gD7oWwgmgBraxdkAPphBNOcJQj5FldopiuE8/TlON9GnHO%2bV2pnaUKLHS1I5e7Rhd7WDqxvF8o29KZUIlMbWWklhDSaoi%2bafX%2bqRUbY/KXOeHruyRkmRDbcB%2bkRkACMAtC/gOCEhqF8R0KhNIyiTyYApFlUzVtvZ0cejVA7Qqdk81p6eaR3dCyKjt72srZ2jL%2bk2AeiXLdJTtNL6aYwbG1/GcyWkUQE1CqFloaRI464ADejimJhAe0M2g6HxTC1gFJsCjxbmCAQVSBEJlxIssFTTph8HxHwQlbAlL/Sg0ZWNwkuve4E0w7AchSaCPi8h8kny4bbkCy0WwgPJ2iG2Ld%2b67ZBL5ySRFKlmRQQG/qpTZ3cq0bl1ytzmNZs7oMR/phbL7LDkMax7DVsi0Hu3XVw/oqlm6Gpa%2blm2o5%2bjrufoGrqGJa8TxjDiBEXBqFZnaRGaCyAzOS3DmOyEBIxwiySBwjlKccN4IKE4434ITiqYcqqTw1npGuPrCP4Ch3/dFuIIzeLvnao/gjQEx67yic/EMqsIG7j/tQhMA%2bH3XwjeQJJZLV779b6kLX15NgOd5AAAAAElFTkSuQmCC' /%3e%3c/svg%3e\" width=\"1219\" alt=\"The popup, appearing when the toolbar button is clicked\" data-srcset=\"/assets/static/extension-popup.82a2fbd.5a5207521fe599bc521a45e0a86414ad.png 480w, /assets/static/extension-popup.a46f8c7.5a5207521fe599bc521a45e0a86414ad.png 1219w\" data-sizes=\"(max-width: 1219px) 100vw, 1219px\" data-src=\"/assets/static/extension-popup.a46f8c7.5a5207521fe599bc521a45e0a86414ad.png\"><noscript><img class=\"g-image g-image--lazy g-image--loaded\" src=\"/assets/static/extension-popup.a46f8c7.5a5207521fe599bc521a45e0a86414ad.png\" width=\"1219\" alt=\"The popup, appearing when the toolbar button is clicked\"></noscript></p>\n<p>Because extension scripts run isolated from the content process, a script running in a toolbar popup can’t manipulate the DOM of a tab directly. That’s why we require a second content script that is injected in the current tab which handles the DOM manipulation. The two scripts will then communicate via messages.</p>\n<p><img class=\"g-image g-image--lazy g-image--loading\" src=\"data:image/svg+xml,%3csvg fill='none' viewBox='0 0 1219 558' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e%3cdefs%3e%3cfilter id='__svg-blur-ab5a77060a19da3e2f0b3f4885d0955c'%3e%3cfeGaussianBlur in='SourceGraphic' stdDeviation='40'/%3e%3c/filter%3e%3c/defs%3e%3cimage x='0' y='0' filter='url(%23__svg-blur-ab5a77060a19da3e2f0b3f4885d0955c)' width='1219' height='558' xlink:href='data:image/png%3bbase64%2ciVBORw0KGgoAAAANSUhEUgAAAEAAAAAdCAIAAACVG/2gAAAACXBIWXMAAAsSAAALEgHS3X78AAAKdklEQVRYw8WXeVRTZxrGcQGykISwCYgChoAoQXbZd0gI2ci%2bkeXmZg87CqOOdapUT21rt3Omc2amtdPW09P22GU6AiIOHa24gFQEBbUV2SJ7gIKEAM4X0NaZ07/aIu95TnJvcnPz/PK83/udOIQFJ2wPST15%2bkLbnYdXv/u%2b9WbPtZv3W289aO3oabvdd/1Wb8vNns77w%2bcufpeYxAwJTgkiJNm17amWT4mE5N9D9lsRAhOfvfNPImxLDCamAIHjcFL2tsCE0JC04KBkBxZDzmBqmi7ffjhltQwPTY1PjI%2bMjpgfjg%2bNjJiHRszm/gd9U5OW77%2b/r5BX0%2bm6PBpMpcNUhjr/qcApJR9algq8%2b6tFpdvvxmQb6CwtjanNf%2bYrVsTiGBgsPbhAXFhBZ%2bkKuEYmW%2b8wMzE2N79km7fNz9nM5uHRsbH%2b/oHHjx8vgXr8pBaXFq0z812WzsG5/vlH8zOzM5YJi2XcMjFumZqampmZWbkMfGLxN5TVap2enm5vbzcDH8PDNtvCPHD1VFbr/N2798zmh319fY2N51taWicmLCMjow6DPZ0DAz/09d158KD73r3Ou/futH13Y2hoeHDQPDj4cOWxf3Cwt6f/0t1L1%2b9fv3%2bvp/vOnc7O27c7u9tvdNzs6Lzd1T0wMNjb1z85OTk/P2/9tTU7Ozs9/WNvb9/o6BgQcDw3Z13RzMyjmR9nBvoHxsfHh4eGb9y40dXVPTU1bbFMOlSVpVBoWyk0bzrDh8kJkqnY5XsqSyurSiqqisr3FpXtKSqrNJVWGEvKS0qqTKYKrbHEYCw2GIp1epNWZ4LVegWkKZSrCriihnPnQQ42m%2b3XJbC09CT1pf8tcP7Iau2dm%2bsYG2sfGe2enu6x2aZtNnAlSMMhKgKF83Tw9Fnnu8WBuMONQs2GYDWkNSqBM7VOptLKII0MUsuUsEQBieWQWKYUSxUicaFIJBEIxFyekMkRMNn8LDK1tu4suOnCwsLj31DPdO7PNWu13picPNN1%2b1Tz5VPfXro4PDIE%2bnZxsfPWLYcgAsLDB%2bHl7eznj05IihJLxTqjSWMogvUmWGeENHYMBayVqzRylVoOqeUKWK6A5HJlYaFcKpUBEp5AwuGLKfnM%2boZzywCLj3%2b/WqGZffToUkfHmebmf7e11TU3N16/PjgyAl6/BQBCCAgfX2dfH2dSeEABm67RaXQGo1ZvBE9qrV6l1ilhrVKlUUCwXKmSKyGZXCmTK2Qyu3uJRCoQSrh8MYcvAgBnVwFgpeas1gHLxH9arjU0NX1V39g9ODg9Owsmhh0gIgRJDERsJ2IyMuJUKkVRkdFoMuhNBp1Br9Xr1VqtSq1RqWAlBCmVkEKhBNYLl0taWCiRSgQiMZcv5PCElHzG2bMNq5fA5fb2xsuXv2m5dv7KlaZr18w/JZBIwsaSsKnxPkJeXmmxoay8qLjYaDDqdQad1qBV69SwFoZhFSilEriXAd9SWaFUKhVLxCKxSCAC7nlsHo%2bcR62v/x3WwC8nMD9vWVxsvtlx/mpL/cXm/qkfH4FRsbBgB0jehU2KxudlBaoUjMpyU3mZqahIrwfWtWq1FlZrYLCkIUghlUokEhH40UUiAY/H4fN5QpEAiC/ks3lcDpedSybX1dWtAsDScgKzbZ3NF67Uf3ut4VJLw7ct54ZGzU8SSCZh0na7CgqIJj2rolRfUgJaSKPRqmAYgmElaCqlUq5WK/ZWVxaXFishqVqrKiotlSmUHB6by%2bewuWwWm1VQwMrOzqqtrV0lALBJzM1dbmv92/XW9zpufjhpabBazYuLywBpUdjMFJxcHFpWxC4p1pqKdHqDGtYoYbVdkApYlbx2/NAnH/3lrRMvsQvYfzp04ELTmZPvvauC1QUcJptTwGIxWExGZlZ6be2ZVWohqxW0zA9jY60PzVdHRlqt811W6/gTgNxEXE66q5AbolPTDXpIBwYPcA9GDlSoguVqnYZDjREzUlKTY2PDCTv9sWEhW8rUeYnRxCBCACUvl8PnAIACFiM7J7OurnaVAMA2t7Dw8w4BvgGMisWVKZSb4MYgB0m4MUpZLgQJZDKRVCaUKSVFxXqjSa2SsRN2ogK9NiJRGDQSudVt3RY/3Av7So0GHSE4NCUlnsMB/cMsYLMolJz6%2brpVAnimnZaeTib7lmcHoCVsFjHilZIcLZxbUcZSQkyegCUW0tOTwpLjQpQSJjM3PpKA2RWICnDfsNkdmRQbeejg/upyrUklTUtJy8mj5eXlslh0Sl7OuXNnl3%2bt1QP4/z3bDsBM86OTQ1iMcKkkvqIiU6XNUMnyD5ZLX645UFPz4mvHDkpZGeQUUuDWTTHhQVoR9dXD%2b19/5dVXjtUcfaHqjZp9lUX6sPCoPGo2l0tvampcifu5AuQkohN3Y7Mzfank7Wz%2bTr4g8p3jZf/67K///Pzd059%2b/PXJl1XCPLWUcaxKesDEPlgmfOsl49vHq44e2mvSKLnU9KhQPxTCOTk5DoI458/XrUECuwiOQf5OpFBccuJWCiWwUkv%2b/P0jn5489uYrRy98/Y9vPjvx5QfHj%2b1X8WgJqQlhO7ZvC/T3dcWikY4bHJbLaaP9IDU1Hlaza%2bu%2bsK%2bB5wxA8HIJ8MYGBbgHBXtkxnrVVApP/f3o%2b%2b%2bcOLxvj1FGS4gK3uSJRSAcHZ02opDOaBQC4eyIcNqIQDghkQgUErlhvUNAwJa91cUFnNzPv/hklRfxLwGE%2brl5e2D8/fCkAJescDwnJ0LFpyRGkfBY9Pr169atXwe8uqARGLQzDoMAQiOdXICWSTZs2IBGoxSQ9I8vVKdnpX7y2cdrAJAQ5r55k2tOXCgniRi2BbXNG4dDOQFzeBwGh3PBYVEYFyQAAI5dUCABZ5CDC9oZ6ewYHOyTkx0rkXLLK0t0Jk02LfOrM1%2buAUByhAs9OexoqaRETPZ3R7lhkRgM2sUF7YJGotEI1LJjJGiYZwTw3N0x1PxwDj%2bLL%2bIIJFyhjCuBBZeuXlyDKSTN3PFSifzEHr4wYyfRGwMAsC6gL0B7I5BPCmFnWBHCCSA5OW4kEHxzciMzs%2bPAPzgyNTufRRUroSstLWsAUF2Y%2b%2b4bR9580WSSseNDA/y88F7urps88B5ueAwGJIFCo5AoOwyQPQ0gPB4bHUNKSIzIzNjNYFLA3yAKjZxDozY2Na0BACct7ND%2bfW%2bfePWN1/987PCRQmZ6UvT2HUS/oADfgM2eW7w93HAYO4NdKJANKA9Pt6TEqJSU2Iz0JAYjjy/g0Bh5kbvDvvz69BqsAXJS6JGDf3j7sP5Apb66XH/ASEuLImzZBBLAbMJjPfE4VyxmxTcol%2bVyd3cnEoMjIkjxu6Ozs1JptNxccoZ/gM8HH77/vAE6Ox0SIwLzyVk11XqtmBIX4hdD9I4geAf7e/tv9vT2wONxOBwAsC9quzD2Qvv5bSaRSGGkneHhpOiYSLCLZWWlhIQEnjr10XMG6OrqckiK8I8IJ3IYFD41neDtutUT7%2b%2bFD/R2ByGAxeDuigXz1HVFWAw4Btrq5xMVQYqJ3hUbE5mwOzYuJiI5MTYueufp5X3AZp1bWrA9Hw309f4X7wYIcVtuzPMAAAAASUVORK5CYII=' /%3e%3c/svg%3e\" width=\"1219\" alt=\"Selecting a beast will make it appear in the current tab\" data-srcset=\"/assets/static/extension-frog.82a2fbd.17d8807864afd1fdcf057815b02f333a.png 480w, /assets/static/extension-frog.a46f8c7.17d8807864afd1fdcf057815b02f333a.png 1219w\" data-sizes=\"(max-width: 1219px) 100vw, 1219px\" data-src=\"/assets/static/extension-frog.a46f8c7.17d8807864afd1fdcf057815b02f333a.png\"><noscript><img class=\"g-image g-image--lazy g-image--loaded\" src=\"/assets/static/extension-frog.a46f8c7.17d8807864afd1fdcf057815b02f333a.png\" width=\"1219\" alt=\"Selecting a beast will make it appear in the current tab\"></noscript></p>\n<h2 id=\"the-setup\"><a href=\"#the-setup\" aria-hidden=\"true\"><span class=\"hashtag\"></span></a>The setup</h2>\n<p>As required for all extensions, we need to declare a <code>manifest.json</code> that tells the browser about the capabilities of our extension.</p>\n<pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"manifest_version\"</span><span class=\"token operator\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Beastify\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"version\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"1.0\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"permissions\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token string\">\"activeTab\"</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n\n  <span class=\"token property\">\"browser_action\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"default_icon\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"icons/beasts-32.png\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"default_title\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Beastify\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"default_popup\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"popup/choose_beast.html\"</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n  <span class=\"token property\">\"web_accessible_resources\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token string\">\"beasts/frog.jpg\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"beasts/turtle.jpg\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"beasts/snake.jpg\"</span>\n  <span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span></code></pre>\n<h3 id=\"the-first-obstacle\"><a href=\"#the-first-obstacle\" aria-hidden=\"true\"><span class=\"hashtag\"></span></a>The first obstacle</h3>\n<p>As discussed earlier, our extension will consist of two separate script files. However, this poses a small problem because the Kotlin JS compiler merges all the Kotlin code to a single JS file. <a href=\"https://youtrack.jetbrains.com/issue/KT-6168\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">KT-6168</a> tracks the feature request to allow compiling to multiple files.</p>\n<p>To overcome this limitation we will create two modules, one containing the popup script and one containing the content script. Here are the <code>build.gradle</code> and <code>setting.gradle</code> files required for the setup:</p>\n<pre class=\"language-groovy\"><code class=\"language-groovy\"><span class=\"token comment\">// build.gradle</span>\n\nbuildscript <span class=\"token punctuation\">{</span>\n    ext<span class=\"token operator\">.</span>kotlin_version <span class=\"token operator\">=</span> <span class=\"token string\">'1.1.60'</span>\n\n    repositories <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">mavenCentral</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n    dependencies <span class=\"token punctuation\">{</span>\n        classpath <span class=\"token string gstring\">\"org.jetbrains.kotlin:kotlin-gradle-plugin:<span class=\"token expression\"><span class=\"token punctuation\">$</span>kotlin_version</span>\"</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\nversion <span class=\"token string\">'1.0-SNAPSHOT'</span>\n\nallprojects <span class=\"token punctuation\">{</span>\n    apply plugin<span class=\"token punctuation\">:</span> <span class=\"token string\">'kotlin2js'</span>\n    apply plugin<span class=\"token punctuation\">:</span> <span class=\"token string\">'kotlin-dce-js'</span>\n\n    repositories <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">mavenCentral</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n\n    dependencies <span class=\"token punctuation\">{</span>\n        compile <span class=\"token string gstring\">\"org.jetbrains.kotlin:kotlin-stdlib-js:<span class=\"token expression\"><span class=\"token punctuation\">$</span>kotlin_version</span>\"</span>\n    <span class=\"token punctuation\">}</span>\n\n    compileKotlin2Js <span class=\"token punctuation\">{</span>\n        kotlinOptions<span class=\"token operator\">.</span>sourceMap <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span>\n        kotlinOptions<span class=\"token operator\">.</span>sourceMapEmbedSources <span class=\"token operator\">=</span> <span class=\"token string gstring\">\"always\"</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre>\n<pre class=\"language-groovy\"><code class=\"language-groovy\"><span class=\"token comment\">// settings.gradle</span>\n\nrootProject<span class=\"token operator\">.</span>name <span class=\"token operator\">=</span> <span class=\"token string\">'kt-beastify'</span>\n\ninclude <span class=\"token string\">':popup'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">':content_script'</span></code></pre>\n<p>The Kotlin code will be placed in <code>popup/src/main/kotlin</code> and <code>content_script/src/main/kotlin</code>.</p>\n<h2 id=\"implementing-the-popup\"><a href=\"#implementing-the-popup\" aria-hidden=\"true\"><span class=\"hashtag\"></span></a>Implementing the popup</h2>\n<p>In the <code>manifest.json</code> we declared that our extension has a toolbar button and that clicking it will show a popup whose layout is located in <code>popup/choose_beast.html</code>.</p>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token doctype\">&lt;!DOCTYPE html></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>html</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>head</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">charset</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>utf-8<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>link</span> <span class=\"token attr-name\">rel</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>stylesheet<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>choose_beast.css<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>head</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>popup-content<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>button beast<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Frog<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>button beast<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Turtle<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>button beast<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Snake<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>button reset<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Reset<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>error-content<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>hidden<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span>Can't beastify this web page.<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span>Try a different page.<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>build/classes/kotlin/main/min/kotlin.js<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>build/classes/kotlin/main/min/popup.js<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>html</span><span class=\"token punctuation\">></span></span></code></pre>\n<p>Even though we write our code in Kotlin, the HTML has to reference the compiled JS output as well as the mandatory <code>kotlin.js</code> stdlib.</p>\n<h3 id=\"the-kotlin\"><a href=\"#the-kotlin\" aria-hidden=\"true\"><span class=\"hashtag\"></span></a>The Kotlin</h3>\n<p>The entry point to our code is a <code>main</code> function that runs when the popup is opened. It immediately injects the content script in the current tab and then listens for clicks in the popup.</p>\n<pre class=\"language-kotlin\"><code class=\"language-kotlin\"><span class=\"token keyword\">const</span> <span class=\"token keyword\">val</span> SCRIPT_PATH <span class=\"token operator\">=</span> <span class=\"token string\">\"/content_script/build/classes/kotlin/main/min\"</span>\n\n<span class=\"token keyword\">fun</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span>args<span class=\"token operator\">:</span> Array<span class=\"token operator\">&lt;</span>String<span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    Promise<span class=\"token punctuation\">.</span><span class=\"token function\">all</span><span class=\"token punctuation\">(</span><span class=\"token function\">arrayOf</span><span class=\"token punctuation\">(</span>\n            browser<span class=\"token punctuation\">.</span>tabs<span class=\"token punctuation\">.</span><span class=\"token function\">executeScript</span><span class=\"token punctuation\">(</span><span class=\"token function\">Script</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"<span class=\"token interpolation variable\">$SCRIPT_PATH</span>/kotlin.js\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n            browser<span class=\"token punctuation\">.</span>tabs<span class=\"token punctuation\">.</span><span class=\"token function\">executeScript</span><span class=\"token punctuation\">(</span><span class=\"token function\">Script</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"<span class=\"token interpolation variable\">$SCRIPT_PATH</span>/content_script.js\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token function\">listenForClicks</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">.</span><span class=\"token function\">catch</span><span class=\"token punctuation\">(</span><span class=\"token operator\">::</span>reportExecuteScriptError<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre>\n<p>Injecting a script is asynchronous and returns a <code>Promise</code> which Kotlin JS supports out of the box.</p>\n<h3 id=\"working-with-external-declarations---the-static-way\"><a href=\"#working-with-external-declarations---the-static-way\" aria-hidden=\"true\"><span class=\"hashtag\"></span></a>Working with external declarations - the static way</h3>\n<p>To interact with the <code>browser</code>, we use the top-level property browser which contains properties for all the different APIs. However, the Kotlin compiler can’t magically know about these declarations which is why we have to write them down first. For this usecase, the language offers the <a href=\"https://kotlinlang.org/docs/reference/js-interop.html#external-modifier\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><code>external modifier</code></a>.</p>\n<pre class=\"language-kotlin\"><code class=\"language-kotlin\"><span class=\"token keyword\">external</span> <span class=\"token keyword\">val</span> browser<span class=\"token operator\">:</span> Browser\n\n<span class=\"token keyword\">external</span> <span class=\"token keyword\">class</span> Browser <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">val</span> tabs<span class=\"token operator\">:</span> Tabs\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">external</span> <span class=\"token keyword\">class</span> Tabs <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">fun</span> <span class=\"token function\">executeScript</span><span class=\"token punctuation\">(</span>def<span class=\"token operator\">:</span> Script<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> Promise<span class=\"token operator\">&lt;</span>List<span class=\"token operator\">&lt;</span>Any<span class=\"token operator\">></span><span class=\"token operator\">></span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token function\">Script</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">val</span> file<span class=\"token operator\">:</span> String<span class=\"token punctuation\">)</span></code></pre>\n<p>The process of writing these sorts of declarations is basicly reading the <a href=\"https://developer.mozilla.org/en-US/Add-ons/WebExtensions/API/tabs/executeScript\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">API documentation</a> and manually translating it to Kotlin. The translation is straight forward and we don’t have to declare properties we don’t use. For example, the parameter for <code>executeScript</code> has 6 different properties but because we only need the one named <code>file</code>, we omit the other 5.</p>\n<p>The compiler can’t verify that the declarations are actually correct so it takes our word for it and lets the code compile.</p>\n<p><strong>UPDATE</strong>: To save you the work of typing the declarations yourself, you can now include the automatically generated declarations from <a href=\"https://github.com/cypressious/kotlin-webextensions-declarations\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://github.com/cypressious/kotlin-webextensions-declarations</a>.</p>\n<h3 id=\"more-kotlin\"><a href=\"#more-kotlin\" aria-hidden=\"true\"><span class=\"hashtag\"></span></a>More Kotlin</h3>\n<p>Next, we implement the listening for clicks and sending a message to our content script.</p>\n<pre class=\"language-kotlin\"><code class=\"language-kotlin\"><span class=\"token keyword\">fun</span> <span class=\"token function\">listenForClicks</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    document<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"click\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> e <span class=\"token operator\">-></span>\n        <span class=\"token keyword\">val</span> target <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>target <span class=\"token keyword\">as</span><span class=\"token operator\">?</span> Element <span class=\"token operator\">?:</span> <span class=\"token keyword\">return</span><span class=\"token label symbol\">@addEventListener</span>\n\n        browser<span class=\"token punctuation\">.</span>tabs<span class=\"token punctuation\">.</span><span class=\"token function\">query</span><span class=\"token punctuation\">(</span><span class=\"token function\">Query</span><span class=\"token punctuation\">(</span>active <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> currentWindow <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> tabs <span class=\"token operator\">-></span> <span class=\"token function\">handleClick</span><span class=\"token punctuation\">(</span>target<span class=\"token punctuation\">,</span> tabs<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">.</span><span class=\"token function\">catch</span><span class=\"token punctuation\">(</span><span class=\"token operator\">::</span>reportError<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">fun</span> <span class=\"token function\">handleClick</span><span class=\"token punctuation\">(</span>target<span class=\"token operator\">:</span> Element<span class=\"token punctuation\">,</span> id<span class=\"token operator\">:</span> Int<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>target<span class=\"token punctuation\">.</span>classList<span class=\"token punctuation\">.</span><span class=\"token function\">contains</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"beast\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">val</span> url <span class=\"token operator\">=</span> <span class=\"token function\">getUrl</span><span class=\"token punctuation\">(</span>target<span class=\"token punctuation\">.</span>textContent<span class=\"token punctuation\">)</span>\n\n        browser<span class=\"token punctuation\">.</span>tabs<span class=\"token punctuation\">.</span><span class=\"token function\">insertCSS</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">,</span> <span class=\"token function\">CssDetails</span><span class=\"token punctuation\">(</span>CSS_HIDE_PAGE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        browser<span class=\"token punctuation\">.</span>tabs<span class=\"token punctuation\">.</span><span class=\"token function\">sendMessage</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">,</span> jsObject <span class=\"token punctuation\">{</span>\n            command <span class=\"token operator\">=</span> <span class=\"token string\">\"beastify\"</span>\n            beastURL <span class=\"token operator\">=</span> url\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n        browser<span class=\"token punctuation\">.</span>tabs<span class=\"token punctuation\">.</span><span class=\"token function\">removeCSS</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">,</span> <span class=\"token function\">CssDetails</span><span class=\"token punctuation\">(</span>CSS_HIDE_PAGE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        browser<span class=\"token punctuation\">.</span>tabs<span class=\"token punctuation\">.</span><span class=\"token function\">sendMessage</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">,</span> jsObject <span class=\"token punctuation\">{</span>\n            command <span class=\"token operator\">=</span> <span class=\"token string\">\"reset\"</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">fun</span> <span class=\"token function\">getUrl</span><span class=\"token punctuation\">(</span>name<span class=\"token operator\">:</span> String<span class=\"token operator\">?</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> String <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">val</span> relative <span class=\"token operator\">=</span> <span class=\"token string\">\"beasts/<span class=\"token interpolation\"><span class=\"token delimiter variable\">${</span>name<span class=\"token operator\">?</span><span class=\"token punctuation\">.</span><span class=\"token function\">toLowerCase</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token delimiter variable\">}</span></span>.jpg\"</span>\n    <span class=\"token keyword\">return</span> browser<span class=\"token punctuation\">.</span>extension<span class=\"token punctuation\">.</span><span class=\"token function\">getURL</span><span class=\"token punctuation\">(</span>relative<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token keyword\">val</span> CSS_HIDE_PAGE <span class=\"token operator\">=</span> <span class=\"token raw-string string\">\"\"\"\n    body > :not(.beastify-image) {\n        display: none;\n    }\n\"\"\"</span>\n\n<span class=\"token keyword\">inline</span> <span class=\"token keyword\">fun</span> <span class=\"token function\">jsObject</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">init</span><span class=\"token operator\">:</span> <span class=\"token keyword\">dynamic</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-></span> Unit<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">dynamic</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">val</span> o <span class=\"token operator\">=</span> <span class=\"token function\">js</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"{}\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">init</span><span class=\"token punctuation\">(</span>o<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> o\n<span class=\"token punctuation\">}</span></code></pre>\n<p>We set a click listener for the whole document. When an element is clicked, we query the active tab (because we need the id when we want to send a message). We then call <code>handleClick</code> which shows or hides the content of the current tab and sends a message to show or hide the image of a beast.</p>\n<p>Notice that <a href=\"https://developer.mozilla.org/en-US/Add-ons/WebExtensions/API/tabs/sendMessage\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><code>browser.tabs.sendMessage</code></a> requires that the message parameter is a plain Javascript object. Kotlin JS doesn’t support Object literals (<a href=\"https://youtrack.jetbrains.com/issue/KT-7935\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">KT-7935</a>) which is why we create a small helper function <code>jsObject</code> . We use the special built-in function <a href=\"https://kotlinlang.org/api/latest/jvm/stdlib/kotlin.js/js.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><code>js</code></a> that translates a <strong>constant</strong> string to Javascript as-is. We then call an extension lambda on the object to initialize it and return it. The object has the special type <code>dynamic</code> meaning the compiler won’t perform any type checks and will let as us make any calls on it. We can use this to assign arbitrary properties. The resulting syntax on the call-site even looks a bit like an object literal.</p>\n<p>The code depends on some more <code>external</code> declarations which you can find on <a href=\"https://github.com/cypressious/second-firefox-extension-kotlin/blob/master/popup/src/main/kotlin/helpers.kt\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Github</a>.</p>\n<h1 id=\"implementing-the-content-script\"><a href=\"#implementing-the-content-script\" aria-hidden=\"true\"><span class=\"hashtag\"></span></a>Implementing the content script</h1>\n<p>The content script runs directly in the tab and listens for messages from the popup. Here’s the whole code:</p>\n<pre class=\"language-kotlin\"><code class=\"language-kotlin\"><span class=\"token keyword\">fun</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span>args<span class=\"token operator\">:</span> Array<span class=\"token operator\">&lt;</span>String<span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>window<span class=\"token punctuation\">.</span><span class=\"token function\">asDynamic</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>hasRun <span class=\"token operator\">==</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span>\n    <span class=\"token punctuation\">}</span>\n    window<span class=\"token punctuation\">.</span><span class=\"token function\">asDynamic</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>hasRun <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span>\n\n    browser<span class=\"token punctuation\">.</span>runtime<span class=\"token punctuation\">.</span>onMessage<span class=\"token punctuation\">.</span><span class=\"token function\">addListener</span> <span class=\"token punctuation\">{</span> message <span class=\"token operator\">-></span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>message<span class=\"token punctuation\">.</span>command <span class=\"token operator\">===</span> <span class=\"token string\">\"beastify\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token function\">insertBeast</span><span class=\"token punctuation\">(</span>message<span class=\"token punctuation\">.</span>beastURL <span class=\"token keyword\">as</span> String<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>message<span class=\"token punctuation\">.</span>command <span class=\"token operator\">===</span> <span class=\"token string\">\"reset\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token function\">removeExistingBeasts</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">fun</span> <span class=\"token function\">insertBeast</span><span class=\"token punctuation\">(</span>beastURL<span class=\"token operator\">:</span> String<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">removeExistingBeasts</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">val</span> beastImage <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"img\"</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> HTMLElement\n    beastImage<span class=\"token punctuation\">.</span><span class=\"token function\">run</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">setAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"src\"</span><span class=\"token punctuation\">,</span> beastURL<span class=\"token punctuation\">)</span>\n        style<span class=\"token punctuation\">.</span>height <span class=\"token operator\">=</span> <span class=\"token string\">\"100vh\"</span>\n        className <span class=\"token operator\">=</span> <span class=\"token string\">\"beastify-image\"</span>\n    <span class=\"token punctuation\">}</span>\n\n    document<span class=\"token punctuation\">.</span>body<span class=\"token operator\">?</span><span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>beastImage<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">fun</span> <span class=\"token function\">removeExistingBeasts</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">val</span> existingBeasts <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelectorAll</span><span class=\"token punctuation\">(</span><span class=\"token string\">\".beastify-image\"</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>beast <span class=\"token keyword\">in</span> existingBeasts<span class=\"token punctuation\">.</span><span class=\"token function\">asList</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        beast<span class=\"token punctuation\">.</span>parentNode<span class=\"token operator\">?</span><span class=\"token punctuation\">.</span><span class=\"token function\">removeChild</span><span class=\"token punctuation\">(</span>beast<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre>\n<p>To prevent the script from running multiple times, we set a property <code>hasRun</code> of the <code>window</code> to <code>true</code>. We use the built-in function <code>asDynamic</code> to cast <code>window</code> to <code>dynamic</code> so that we can read and write arbitrary properties on it.</p>\n<p>Next, we listen for messages and upon receiving them either display or remove an image of a beast.</p>\n<h3 id=\"working-with-external-declarations---the-dynamic-way\"><a href=\"#working-with-external-declarations---the-dynamic-way\" aria-hidden=\"true\"><span class=\"hashtag\"></span></a>Working with external declarations - the dynamic way</h3>\n<p>Again, we need to call an API defined in the external property browser. As an alternative to writing the whole declaration, we can take a shortcut and simply declare</p>\n<pre class=\"language-kotlin\"><code class=\"language-kotlin\"><span class=\"token keyword\">external</span> <span class=\"token keyword\">val</span> browser<span class=\"token operator\">:</span> <span class=\"token keyword\">dynamic</span></code></pre>\n<p>As we’ve already seen, this lets us make any calls on the object but we sacrafice any compile-time safety.</p>\n<h2 id=\"testing-the-extension\"><a href=\"#testing-the-extension\" aria-hidden=\"true\"><span class=\"hashtag\"></span></a>Testing the extension</h2>\n<p>To launch an instance of Firefox with our extension installed, we run</p>\n<pre class=\"language-bash\"><code class=\"language-bash\">./gradlew runDceKotlinJs — continuous</code></pre>\n<p>and</p>\n<pre class=\"language-bash\"><code class=\"language-bash\">web-ext run</code></pre>\n<p>Changes to the code will be picked up nearly instantly.</p>\n<h3 id=\"debugging-the-content-script\"><a href=\"#debugging-the-content-script\" aria-hidden=\"true\"><span class=\"hashtag\"></span></a>Debugging the content script</h3>\n<p>If we need to, we can also take a look at the code in the browser. To debug the content script, open the developer tools and click on <strong>Debugger</strong>. You should be able to see the (Kotlin!) code of the content script and even set breakpoints.</p>\n<p><img class=\"g-image g-image--lazy g-image--loading\" src=\"data:image/svg+xml,%3csvg fill='none' viewBox='0 0 1219 751' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e%3cdefs%3e%3cfilter id='__svg-blur-1224afb86d3e95b0524e1f1b01fc900e'%3e%3cfeGaussianBlur in='SourceGraphic' stdDeviation='40'/%3e%3c/filter%3e%3c/defs%3e%3cimage x='0' y='0' filter='url(%23__svg-blur-1224afb86d3e95b0524e1f1b01fc900e)' width='1219' height='751' xlink:href='data:image/png%3bbase64%2ciVBORw0KGgoAAAANSUhEUgAAAEAAAAAnCAIAAAAw%2btlrAAAACXBIWXMAAAsSAAALEgHS3X78AAAS0klEQVRYw7VYeVRT57bnv7vue/fV1dfna23rq1OxVi3aKiKIiCJzmBEQDKigQGutiiMo4IAiCMg8z/OoiIrKIIIzIA7MCQmZk5PpJCfzwNsnUa9tbavLe7%2b118mXk%2b/ss%2bf92zFZZmrxjalNaXPvkwnOoyHywHPq4%2beUgZHpgRfUJ6P0wRFa/3PqMIXX0TdkaeW%2b2NR60UIrnBa8IsPXrxeu%2b1cQzmrhfMs3Ob%2bmhQssTb%2b2BoL9d8vtFsxfu2SxjemidSbubiEE993dD0Y5EpWIy0MFIgGPz2NxBBwErjwWm06loWIxiUwJJh4huIY7uu50cg11JoQ5EcKc3cLwjWuog/OO9yaXN2mno4GAFcEjHHga2b5JLm5hHt6Rbh4R7l6RgcQDBI/d7l4Rbp7hJmIuA8MwnUat06g4XK5AIGAyWTMzM3q9fubV0s/oNXLNODrCVjG0So1CIZOIxRKRGBWJpVKJXC6b%2bVcsrVarUipHRkYQBBEJhW/%2bpNPpVSo1aZLEYXPodHpnZ%2bfg4CAmxfh8gcmzoScvxsjjZOoYifp8ZOL5yPjdhwNkGptMpU9NM8hUBoXGJFHpExPT3cO99yf6x8amno%2bMPXk6/PTZaP/A84Gh58%2bGx6jTTAoNPwlEfRtNA9F/SzQ6CyfGS6JO08HP/YNDo2MTY%2bOTdCabzmBP01nwLIeLyGRyBoMpFAq5XN6zZ8%2bePns%2bQaLwBUKT5XY%2bC2z9F230M93ov2RTwLd2gWtcgy2dt6x0Dv7OLsDcNWTpJn8z%2b60r7ANXO%2b5Y7RjyvVPQKqdt5i7B5i5EC9dgC9cQC9g7bwOycCGudSFauhLXEYjr3ILXG8jGPdjWI2STJ9B2O6/tm722O/jscPLd4bxlp4tfKME/jOAf6h4Q5hm42zMwPDBsb2Do3pXr3Ta4BPgGR3gFhW8J2WPvSUzNKVbNzND5/GmEz0ZRzcxM78MBF/9d9x8%2bNvnsB7v/MnP4eIXjJysdZ690/NjM0SngaFDYoRMpBQmZpRVN1/YcT57zvfNcc8KX5i7/t8b1qzUEoHkWhPkWbgss3BaudVtk6f61pYeplcdiK89vrD2/tfZcut5zmY3Xsg3e1oRtm313WjgEfL/RB3Rw9guz99oO0m90C7J08HX23enqH0oICPUI2OXsHWLj7H847txGQoC1g09UzJmlFvaXr97af%2bz0ciunnOIqVKt%2bNDx88/6D9t4%2bNoZd7bqz1n5LT%2b89k3lrHGevcpmzGsj1c3PCXHOXebYhC2xDwMDrvMKsvXatciHOX%2bu%2bwNJjoaXHIiucvl7nCWRq7bXY2mvJeiDvJTbe39p4L7PxWb7B5ztbH7ONvis2%2bq7c5LvGwd/CMWCNvd8a%2by1WzgHrXQLXu261cd26HvbOAbaEwE3uQZs9tzl4Bm/2gCvR2SdkwQqbpWsdVm1wW7zaLmJfjKN3iIWdV0JK1jCZdPPu3b4nT27dvTswNtp89aaNa%2bDo%2bKTJXL/D/%2bN34suAuLlb4%2bcFnZxPPLVoW6wpMf5r4snFxPglxJPLt59ZFZ5kHp5kEZm89scL6366YL0nZcPetI370uz3pztFZRAOZrgdyvI8ku17LNsvOifweC4xNm97fMGuUwW7Txf8lFD4S2JxVHLJkQsl0amlcellp7Mrz%2bVVJRdWpxbXZpTVZVc05lc1F9ddLqhuPBh79iuzdZ8sWTtrvtkP9j4nkjKSc0qyqxrbe%2b7xMGn340c3bt%2b%2b1N5B4SP9wxPRqSWQeCZfBsd/Gpw4d3vivNCkhaHJprsuLI1IWxaZvnJPxuq9WWv2ZQNZ7Mu22p9jHZVrczBn46G8TUfyHY4WOEcXuh0v9ogt8Y0r9TtZvvVU%2bbYzFdvPVoYmVoUn1exJqfklrTYqve5IZn1MdkNcXuPpwubE4uaUspb0yitZNVfy668WN10rv9RedeVm7dWO%2bmudFc1XQ36Mmm/htMTOf5GF07wfNi2zctx/4mzd9e7uB/0Dw8Md9%2b/39D/ufHD/3tBg78Czc8XNVAbLZEHIyS9Czs/fed4o/ZLdKcsjLpr9mP49KPBzpsUvWZb7stbtz7Y%2bkGMTlWN7KHfj4fzNR/IdjxY6x%2bAKeIEC8aX%2bp8qCTpcTcQUqwhKrIpKqcQVSa6Mu1h7JqIvJro/NbThd0HSuqCmptDmt4lJGdWtu7ZWChjbQoazlOqjReON2zPn0r8ztFzqGLHQJ/dIuaO6mrXPW%2bRxOygENOx/0Q6m%2b/2yk%2b9Fge98DRKl5Rqafzq%2bfZrBNFu049cWO5IVhBunD/yn9qp8zV%2b/NfGn7Aznro3I3HMzbeDjP7kiBw9FCp%2bgi15gijxMl3nElW%2bLL/E%2bXgflDEip3JFbuOl8VmQweqN2XWnswvdbogRN5DadeKtCSWn4po7I1u6Y1r76tsPFqSdO10uZr9e3dEYfi/teCMNcu8KvNxM9stny23meWpfees5lVrTdv9N5/8qK7o7fh9r2mrruN9/qv9PY/OlvUQqWzTJbsPDMv9IJRegges8iLK/ekr9qbaW6IH8v9OVZRuAIg/abD%2bXZHCxyOFTpHF7kcL3Y7UeIVV%2bKDm79865lyYoIxfirDk6ojL4ACdfsu1h2EEMrCFYjNbTxV0Hy2qPl8SXOKQYFMgxPy69vAD4UNbSDl8dT8/zYnzFnvO8fG71Nrn89sfGeZuxGPnitpab/Z1yfkl3d1HOjqOtLbG81ipA6NdCcUXsZDaHlYwsKw1G/CU76NSFseeXHFT%2blmP10ED6wF2x/IsTSE/oZDeRsO5doeynOMNkpf5H6i2Cuu1Ptkqd%2bpcj%2bIHzD/WTB/FZg/4kLNjym1e9PqDqTXH86oO5bdcDwXz4H4gqYzxU2Jpc3JZQYnVONOyK27kld/Ja%2butfzSjf0JGf8w2zx7LeFz24DZVp6fWHr8Y5WLS2Q0ZEv7nbuY9B6F0jIx2TxJbkHRjsGRR6cKWnAFzMLPLQ5PWxqZtgxE35OxYk%2bGDeRodJHF/px1Ubn20UW2h/OtD%2bY6HS/2T6gGBQixJd4ny93B/PGlPnGlPvFlO5NqdiRWExMqt0P8JFWHJ1f/nFr3S1rd/ot1hzPrj4IHchpjIYmLWhKKcSckl1/KqmlLq7icUXU5s/pyTk1rVvWl4ub20GNn/77Y8hNz5y82%2bM2x9vrcxvfjNQSroJ9BAaDKK7er2u5Utt0pudxd0NSVWtl2pgiSmI2H0PzQlK93pSzeDX5IM92d6nW68nDhldDUuojM5j1AWU1A%2b3Mvx5RcP1JwOSix%2blBe64HslpjituNFV0%2bXXztVfuPntIaEyutnq67HF1%2b5WNcBlFzVnl7Tnt1wK7P%2bVm5TZ35zR35TR2HLraqrPVm1bWWtndVtnTVtXXXXexqug2SdjTd6EvOrvXcfsA2M%2bM8fXGYtt/3b/B/%2bY4WDqWPQxcpLKWXN54vrEwvrz%2bTXxufVxGbXHMuois9vnJpmmmxNKPZNrPNPrNmaVE9Ma9qW0hhVePV8fWdKU09Ga9/Z2u7oiu4TVXcS6vtgk9jQF1vWfq6ms/Dq/dKbj8puPCxvf1DQ2pdc39XcM1hx40Hp9XttfU/rbz2qar/X2jPQ2PW4pbu/6daDls5H13oH2%2b48vjM43NL5oPX2w457AzfuDvQOvOi8D71poOfhUMP17tjkrMiYcxuIv9gFRm7wJNoERLiHHy273FF7raeyrbuirbu8rbv0cldRS2du483Clq4JMsWEPDEKgInJYk9T6aSJKQqZJkax/ifPJicpkyQKhyMaFzAHqdwnk9ijCQlLIAcsRaUyxkdIlCkqXBkMLuCwsbEJCnl6bIxEmqRMTdEEQvHwyBgZOIyTuTyhQITS6cyJcTKZPE0aJ09NUUViyej4xCSJTBqfYjE5mEwhxeQSKQYEb8cwGSaTyxUqDJPLZAq4OTlJgtPwFjKZAs9RKNPAhDpNEwpFJlIRD5MrpRgG7xHwhRKJVKFUAgtUjPK4iFiEKpVyYIYgKI8PyBnY4YuPCADKigQiOA/vQFEJnBQJRSKRWCxGZXKFVIoBB7FQjEllCqVKJpPBTyL8jBjeCtASxISn4KsElSiVgKNVCoUSzsBNkBiVSIEPMDESm82BK/yA/4pLAFAaWIJ6chOdUgqAGzPIpFYDzpvRaLQAvkFWNovDZnMVchXc4SMIzADwBJPB4nF5ApBeKFIqlPAIHAaCjVqj1eCkUSlVhq8aIysQDq6wV%2bO3tMabxkeMN18rwGKxBOA%2bMSoUivl8sIcYQQRw5XIR9Ss%2bRoLDICGQiUaOanV6BewxOdxVKBQwPfxm1IDhBqYNUBo2MtxyqE6n%2b%2b0Zw7EPWcAE4D7IBGqBaUEWo42BjFb4DYEBIJ5xBTRarVAg5LA4EBXgX7DK78cl0B3CTKlU8gUCcBdYBWY3cDR4ElwB6sOC/QcOZRAc8CJQBq4Ko1uU4Gbc8rhx4Y7hPigJ0mu1OjabbaJVSOBJkAyBqUcu/yPWwEKCYWAbiEE8JwxRbnCiHMM3cuAA3oNjOpgMDe%2bDwwbHvMeCxABubCabSqUzaEyEJzDEmPo3HoCoQxA%2bDGjDw8O4AhAyer0O3Ad%2beB0zb87EsEBvKA8gGRfchiAsFsymDCaHA6UA5lSEx6fRaHAHsg3Dsw6DF8DH7yPtzxcYgoUwYUHKAStwMpfD5SN8qAyyXy/wFUQyroAKE0MIQcWASIBCBMUErPl71jDyawzprlYquFwOnUZj0uksFpNOoyOgEpc7PU3jcjhQm2APpnhf0V%2bHEJfP4rKZCJfNYjAQ4MhkAEdMgqqgmCjkaqVcrTCQEr7KcAXwJNbqoPAiCMIBdSENoG5DwZErDK54ybpnUtY1Jtbo9CIJNkyik2mc0SnG0OjU0Aj56RhlaJTE4fFFEikXETBYHJ5AJFOo1Fq9Sqt7R1JCdZqZgR4BxYfFQUgUJnQbDOcCNQpqDsS9EpMpJZhS8uoK9fllCOnxvzQ04HmwHDgLXMbnIVDLDInyMqHL%2b7HyxxJ4jRhTkNmiSbpgii2eYolGKZwplpiLKlU6vRKXWK/WzcBVodG%2bF8nVGoVuhkUjrz5PnR2HmCUjn8Zx/naY/fcjRuIAzY7lzj/D/fIUd14C74t43rzT3NY7z030Sokh6rU6jUYkQMQCPsrnQx3GUBG0HEjGl1mhVWkVqMaw/sD/%2bg%2bpP8aUY9KmImpYWyok4Y1i/woRoVjkXiJ2L8XJrUQcUIUG10mINWhILRpUiQZViToevDChc8UMsX5aoJpG5MM00RCZ/5SEPCUjdFTPxmZYEj1DrAOSyFRCEWSLbubfs4wKANiAKvfPv9X02hmIL5VMr1bqNUqNUgahP6PXvX5kbHTEZE701Ecx/FkxyLwzvO%2bSBWvThcuSBdaZopUpgo%2bOcT%2bK4QHNiuE9psrUcqj70McwAAxCvF8CNAAnCaGUQnuHBgI15HVP0r8S4s0%2b9S4KAB8IXQW%2b8A4AlV2JN22NCi%2bmr7q3YcFueHjE5P44cndKcXtMfOu5oOuFoHdcfHuY3zMi6JuQPKJrHtLURhJKlXiJxjAGk8lmsYGgDAOoArgB74DaD31Ap9N%2buAegikBZZtBZNMCYgGVYXJmhbb0GEa8JGgKexDMqFIqkAhXIRXwMSIigfJ4CFWrVql81MrUKlWKgN4iLl2FMCrAKTGLAZCiYSy6TAywzIjBoyQDxlLj9oGBLAODBrXdUANzLFuq4YrwJ6nV6Qzk2ePR30APsNTIyYqKQipRqrQj/r1YC8EkAEFMgFkI3wD2n1epnjATqAmwAcaFfUaengVgsNmBDmQwwsNTYWSSGhXdTmQyCChSATm1EnX/S49%2baAwy%2bmodqAMihGJSoGaVar9G95RFcAbXM0MhQqD0CQ5PlA9JEeAge5SJU/ysoIQV7wBlowSyIIyYL8LIB5UoAQoL5X9fcD0xitVpH5qpJHDVLpOGiGho4RKqXKXV/qADAYOhcIATgZLArl80FNXjQmARC%2basyCgoAVIcNj4cAZpiamqIzWJDBU1OUaRrdmNCg3ocnsdEDCKodY6npAjUiUWsk6IxM/NZHcAWMYO4VZsZFMMqBB98bL4WAEqESuKk0DDgQ3HAGh29yuRZHvxBC2IeXURKJZFQABBFItBxUL1HMaKRSNfrXCvyFhfAQkmIQbAbIqcbLggGR41AXer2hxinxIUP%2bx53urxUARAhJBRtIYgRViYRCHoQ0KtX/wSPvq4AUAJIA5s6XoyMeNoA7cBgrEgGUgg8WhyMzTAX6X6Pad4kiHMzByKFQCDHdBEvNFGroPBmMuzrt2y0C4TA6OvoeCkAOvJmm7yLQ%2by4oWRCUIDqJreKI1AyhhoJoZCo8oXRvm%2bDodPq7KgBBAjUeiMczViEWk8kiT1Ggo0HqgzegcRpnGsPny7HDcAsPMBiAjKPWn78F%2bMATcArqtw5vAnqNYfPWhTdjtfr/AcIntpb2qYvrAAAAAElFTkSuQmCC' /%3e%3c/svg%3e\" width=\"1219\" alt=\"Debugging a content script with Source Maps\" data-srcset=\"/assets/static/debugging-extension.82a2fbd.dee312a3124465bc8eb13e5a4bb048f1.png 480w, /assets/static/debugging-extension.a46f8c7.dee312a3124465bc8eb13e5a4bb048f1.png 1219w\" data-sizes=\"(max-width: 1219px) 100vw, 1219px\" data-src=\"/assets/static/debugging-extension.a46f8c7.dee312a3124465bc8eb13e5a4bb048f1.png\"><noscript><img class=\"g-image g-image--lazy g-image--loaded\" src=\"/assets/static/debugging-extension.a46f8c7.dee312a3124465bc8eb13e5a4bb048f1.png\" width=\"1219\" alt=\"Debugging a content script with Source Maps\"></noscript></p>\n<h3 id=\"debugging-the-popup-script\"><a href=\"#debugging-the-popup-script\" aria-hidden=\"true\"><span class=\"hashtag\"></span></a>Debugging the popup script</h3>\n<p>To debug the popup script, open <code>about:debugging</code> and click on “Debug” beneath your extension.</p>\n<p><img class=\"g-image g-image--lazy g-image--loading\" src=\"data:image/svg+xml,%3csvg fill='none' viewBox='0 0 1219 751' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e%3cdefs%3e%3cfilter id='__svg-blur-bc494556c1944bb5c0a94925ba654bb1'%3e%3cfeGaussianBlur in='SourceGraphic' stdDeviation='40'/%3e%3c/filter%3e%3c/defs%3e%3cimage x='0' y='0' filter='url(%23__svg-blur-bc494556c1944bb5c0a94925ba654bb1)' width='1219' height='751' xlink:href='data:image/png%3bbase64%2ciVBORw0KGgoAAAANSUhEUgAAAEAAAAAnCAIAAAAw%2btlrAAAACXBIWXMAAAsSAAALEgHS3X78AAAIlUlEQVRYw81ZWW8cxxHmT4lF%2bQgCOQEcUzGlwECQPESiyFAKAgRBDOiyIvshL3mQjQR%2biP9EbOctb8lLYCFCIECHwwgiJdEJKUo8drm7c/YcPfexMz1Hvp5ZrlbkkhKPyGoWentmenqquqq%2bqmqOHHlj/NC3xt98a2psbHL86Kmjb0/84O2TvB%2bbGHvrxNj3T75z9NSR7/zo%2bLHpW3cWv34szP23Of9ImH/UubfYevCwPb/Uub/UXlhVmqr7l7/983vf/ckbr7/76ujxPdGxw6PHRl8ZP3zoGKfRp2j00Phrr/4QhPGbR3586JV3vv36u68dPj5yZvr8iYnzp3/9%2b5%2bf%2b%2bT9ix%2b/d/bKpct/OHf%2bo7Pnrpy/8NHZCx9f/vCTX/zyt2cvXBHbokNNVZAdw/Is2zYt16QGIVQ3XcvOs/TOnftTpy%2bfnHz/pxMX9kAnTl08OXlx6vQHp6YuTUxdwngT/ezMh5PTv8EnfvXe7yanL0%2bf%2bQDjEV1q244T%2bJ7nuuuttizLa2uNJE2jKI6ibsz7OI67juN4nk9Ny7IdXTdMw9I0I%2b4mZVnmRZHlRZblWZ4zhm6PLUkS3/cXFhZUVdV1PWMZS1mf0iRtNJqEaJIoLS4%2bXF9vgRXTNEdMVbQdLwwjPwhty6HUFgQxTRmY61aUdBOMXde1bUeRVZXoiqxIoiwIkut5SZLGG9O6%2byPwgD3qdASzalh58Ck2UZJkSi3DMMG9JCmu69m2OxJ7VpJmmA0C3yDsJWZv/UB/Agg7jb2u1z0oqr%2bClbH%2bJu5ryrJsg8Osnoa9HoncWoCklqF%2bsz8eJM509Rr6Habtk3ZYtv%2boGnCRlpaWuABpmnEz4A/Suh/6vq5pqqLAkEyTBkFY79M3SE8EgAbgQoCRnPUoHfYCNamsKHAdTTd8P3hZBAgcqyyzvy5mNxpMpWlLY22d%2bRHMffMLMCBgRVGUIPzCBzKWc3vM8sol%2bKAmVu1CH0Syjcuta27%2bBEezrHawGtP4alk21CgGBWB/f5zfbOZewIjNKYi3KiGxg9h2fUKIaVom4AC6sIFaFtEN27JxpRsGLl3HoW5CnNTyU%2br1etNLbT8N4%2bG6rQlmKQkiIQaWIYqmypoGxJMUjRgVWiTbmRBNsyJ0zMA24ygEYauGfKCb%2bEkedVNFURDRWp2OJMsa0UzD5NBKNEJ0SZFa7bYsCqoZN7WsbTKRphJlLZ21DdYxmONzENlBgPXGutCRVUUTWkJjZV2RSavZEjoKd87uNgIEtoFg9PkXf/7TZ18ooriw8HCrrBWApgSMqqTeaYPHMoqtUhUEHRO6QOhxXR/Wxc2AsSLrmU3GBlzrWSaUVwGxMpy8Htf9s524N7Uy8TooPj2VY%2bj81/%2b5fev2zZu3Zmb%2bPTt79979%2b3dn783866uZmTtzs3evfvmPlZXVuMu6HNER3XrUHRg8Bw0Af/xUCNpWgNCh0MCDB/Nzs3Mwj7XVVVGSwe7W1woIt2PDhPz/1rZq74kA4GuVtzVKqSAIsOihEAk1LS8vI2fSNCQk8DbCEyGutB7nz5RwP22oAEiK%2bnGgZ21DTaingbwQJSmKIpi/rAAjtPIFtqECIDvqReIBy%2btuZ3MA58ALPN8DaDqW7QJTkU7BgamFS4vauG9T27NdN8j0oHQiTnZUmkFphyXLD1iACrj8IbnQtlGGMWpQ5NWATmAOYoHnuA4F65ZrO%2bDerAKCazmen5p%2b4Ya5G%2bVOVJhB4YQIfMV%2b2lCrRo68CwG2mPjOFl/0HDvPyiJDn/MQ24vYg%2b15PHg7ATzP240GsgyRy1ANIqtRGNZsAtxRkUEblm6SjqpKCvSjKbquGYqoICo/W9J9mNDuBEBeY%2bqmqcGATBhPFEb1ughqmkoMDdHNNNFpVaDTdB6nYWaeDzHcqtm27cG%2bvABBN/ADeAsU8iIFSOGjOnIhDXtMbMp3F46PPEKVVaIQlJoGnKMSACJhwK%2bQZSgq0liEcVGUVInoREdia2g6NIllX5wAWco0Ccxqlk51Ra9dIg5DRSGKxPMi8ASuECIgCf7kjoCxjFRJVS03VrxS8QozLIlX6rsHpQMQoI5XcMWcpzUMo7LgBX2d/PGcB/kPHLWq2arqkz%2boG7%2bDOo5vQlXWbbhy/nxnAAfjxGAiCOMwTsKoW3286KZFlBYJgyqKlBVRUnQZP6EYbFWGURb7bvsSgCdzKQuC%2bMEj7e5DY25Jgz6DbinSok1L3eMq1rxy3ShFq4zZC4rEezGhCth7edvTadzeORu63xX0wmCLfEOfQ1nahQDQIBIP1PWiIqOUIVp1OgRwAcLIsmFSVdVkXBIdHQorjJvNJuqejoAESuJlg6aLgohL3BLaHaXCWUEQgatswDx4YPFYU2eyxVA/wa92qCKe34QS7ATKgIXFhbYgNNYaK8hdG821tZVlZLErK8srq831drPRwACCASVtXvtzREUoMNAZ/A4CBe4AWykkRgJFLfyGYdS37y5385TY6aLEGhoTKB%2b7wbaF6C40ADfwePMBjKjLoAQVAK%2bqOi/KOMijUAZ64iaiFPyYVWcAFQ0ONk4ABmizqsFWmBouL6PBPbGYcyACYJNmZ2evX79%2b48aNmZmZr27fvvrl1UePV/nxxBO2%2bJEEZu7qRHHIt5LeAWBW0Q7nAHtz4qKuY7ByvwpjrHfcx9gGvh8QsY3BfgUAZ0hgrl27Fsex73uOjawfOQ7vUUB8IwXN7pwYAmD2Hz/9VBA68MO20OEAI3SazXXcf9kF6FdkoDiK0yolSLo9E4oQn2N%2bpBQGoe/5yFJRtlXAlb1cAgCtDWJIgqSIqtwR62wUnIttAVk0slFJkGVBRkmASgAYX%2bfbZfGSReLBCFrXU1sDc91ynvkdTDuYkhJFre4VqlMQtx/w%2bQYPyQTy4sCPWIZpgP9Lajc%2bkBd2VBK3NPzyxbehJkQp/R8lWV%2bvEjBdjQAAAABJRU5ErkJggg==' /%3e%3c/svg%3e\" width=\"1219\" alt=\"The about:debugging interface\" data-srcset=\"/assets/static/debugging-popup.82a2fbd.64b02cd24dba7ac196ed69a80e9a847a.png 480w, /assets/static/debugging-popup.a46f8c7.64b02cd24dba7ac196ed69a80e9a847a.png 1219w\" data-sizes=\"(max-width: 1219px) 100vw, 1219px\" data-src=\"/assets/static/debugging-popup.a46f8c7.64b02cd24dba7ac196ed69a80e9a847a.png\"><noscript><img class=\"g-image g-image--lazy g-image--loaded\" src=\"/assets/static/debugging-popup.a46f8c7.64b02cd24dba7ac196ed69a80e9a847a.png\" width=\"1219\" alt=\"The about:debugging interface\"></noscript></p>\n<p>A new developer tools window should open. Make sure to toggle the visibility for popup scripts in the top-right corner.</p>\n<p><img class=\"g-image g-image--lazy g-image--loading\" src=\"data:image/svg+xml,%3csvg fill='none' viewBox='0 0 886 593' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e%3cdefs%3e%3cfilter id='__svg-blur-837081ca7bc4ce15448de093192eac60'%3e%3cfeGaussianBlur in='SourceGraphic' stdDeviation='40'/%3e%3c/filter%3e%3c/defs%3e%3cimage x='0' y='0' filter='url(%23__svg-blur-837081ca7bc4ce15448de093192eac60)' width='886' height='593' xlink:href='data:image/png%3bbase64%2ciVBORw0KGgoAAAANSUhEUgAAAEAAAAArCAIAAABHOBkQAAAACXBIWXMAAAsSAAALEgHS3X78AAAMCUlEQVRo3s1Zy47sSFouNiyReAPegQXiHZiRWHJ7CaYlJPbsgSWCYQSaBSuEZiQEAolG0NPTp06dS1VlOp2Zvt8jHLbDl3BE2E6%2bsKtOnz7dPd2n6Znq0F9R4XA4/N%2b/P5xX5e0z7/Y/69xhiVdnPg2dJg8wRs%2bLsCUxjc5V6tHYGeuizoOWRLyIqtTnRdAUIZbhbp36ZeKJKpu6UrdUtVS/D6nPPaI4eftyrHPQ1LOuzvPYmcZG9Yyl/sjiq/b5TfivfxOl0fnk%2bEFwf2u5rmcdTrZ9tPYWq9uDddhZh4N9HvrOPp7v73e2fXbdwDk7x7OLfrezHMc7HM59Ly6/nCaVlkphIByXfPS/lzi%2btF1RVmoUV32dDULP89zj/ULM86KkmvSElmd513YYzJPmYn4ZT6/T5T6brWK2yBI1i5SjGEc5SjwyT7MYBK611oyxvuulVMMgxDAKLBol5rG/MDNCSmkGWD4IvKuq6qbh2GfbAa0oCozNJqM0JKSelyaOh9e3bsySIG0%2b/pka8Xh3FZ/3n1zfYOnxePJdf/did/Pz57vbHaXl69u7w%2b5g7%2by7m9s8SZNKnuPe8tpbm39y3yRU5lkWBOHu5e7lx8/v76yXn7y07w68bp9dPz8e7JN1vHt1//L69f2LO2t/aLs%2by/PEj57/7Bo3717eWff2q5vbruuur2/u7%2b4Od3vr/mDf2ZTSZ8%2buIy882efDrfX8GXi6K8r67ic/9e7v/unn%2bYf7Yv8v/5zHqe97V3DcVTtK6wl2gD6UaXpVmNHc1kPH0KhR9yj7Yaz50LYdbmEl1qKHUrEOKt8egeKHTccrbWPcMmZZ7%2bKSt2Aehh8wj8FGGGMxJkGct1jWd4Mxl9IiTsabF%2bWru/rFK3k4CDUNXXulu9J42bIUeR4GkesEkOTB81aOwVzoQxmOe/Za3q2yTZRQBAMWkCJPYJwoaVrTcHdcRd0IYqPJt2Y2FWAS/GGHum7KkoFLQihm0jQfhpEx41GUMts%2b4V2fPj5NEi7HW13X5lJN8LkrxPjK7YJNoSJML8uyCaBX1YI2ZYA2efAw9IlJBc01Zr4uK9FDz4gJZfYwrJsO3g79CihVrMrfbPtIjFVg1Oh41ff2Fhi2MabpuVFJ98aGDwTz4u3KeEc/iLapr5CwpuVi3rc6wTAMxqr4GwYIsMn2aTpYZUOgY05gdd1NRAxpo8715HOeyPwoaKAYa0sw18ljyI5BdYhqP19ZG0ZsMM0LCPuEYYRgBdNIgM7Z9bzQd3zP9Wzb8RzvaJ%2bbul0NKDfTPdhhDWsoIi9IlsRXsikQ4JCuyAtasjwnaZoVOaGE4YkvTGqbiSAqdD03o3CYTLlKuIg7Bu4jQVkXpjwlXcWFHVYHv/Qzfk6qg0cTNtC63zkkIR2Sc5Zlb0y9msiY98FYZtJEmPpM04/3tMmOajQxAHVgYplnBr3BrlVNsoIUkKGEVIRS6ClNMkJKAiEJLqlRjJKr00%2bPhnk0kbHPspltvTLy6k3nbxSwPmDt95sARoY1eBDOcIyuHzo4gvEC4zbt6g6D2G4JzMPDgAxmp0ldjZzq5SL1hIyS57QgjNCalTVlTVXxgjJS1nCHskS8degBbaziiK1Bir5qdcBzpu8jGZWyb/rerUevlm4zso4PgnHt5upEVFXDm8XyWUtalhVFMfxhCwb4bYN3dMOm%2b609BI7a8sEWkw%2bXkGEc%2bquLKD91bjWQNK7SeOz5L0TGzYVMYAK/vITHpIfPhDlndadhk1XtJi0vC2jarLC8u8smQMdb5%2bQerJPn%2boiEOM7UY/LYfMa4zdpvGeyRTEIB1F394d863/9R870fsj/%2bcfUnP67Q/9E/sj/4h/L3f1R974fV9z9Pf1/93t%2bV%2b1wvagDYLp2CvmmjT7mKmfaJDqhC4vYLdaYqqURS%2bQ7xsiZz6TlvirezAgRI0/QhqB6dDQ1qNwbpjRfVq2XgRIj1%2bTPNqMXEwG9%2bYF19UFz9IP2NP09/6y%2bK3/kr9rt/zX77L9mv/1l29YPs6oPP0K9tgz9NP3LlZZGDUnMn4UWkng6prroxotJOlVdOcZkeC/tI46SMz4VdcKZnxJ1eeXyMAcvaYuBN4t4GUG8UxznyCSEhRnGS5wVSy7K86wUmBrqaivmCaqiTSzsuXCx8XFq5DGoR%2botpkCaRDogpZCEIEHKP6gP4JmqfSitRu1hRLuq2d3J5JlNIqZXvg8qx6dnK7UNx9IijpuVwOIRRhBhAtihpWSD%2bWG2wCJlhmvRaj62F2DaY3gbENbWuMTD3n8bA12ybnkwNABdCHvKaiE3gO6D6mCmAD/zHITpkMmLBmZy80rWzozH5ZdaznhbDzWYBQAEyTBTGURAFfmQCYEV6g5XD%2bA6KfXEMvCkl3leAghAgL2IAFoiJhgDg3k7lqdCnTDmZcgt1KgbetwkT%2b7gNyilhkUNPbukHpevV8av72ziKYckgiLMkRx0RG4dJwzBGylZKf47pb08ANFqWUisDZOdK%2bFyGTcFkWM5WMiZksMmUMhhpXAxyA30BBchL2njErDfCDsAccAnWAThxlCRxSgrgDKmqZsOsL6dHF/rGAgDwxhWqVdYqj7clPZaoGBjnEok/YuZoMc8P%2bPVOEt0uUIsCoL7pIecxiL%2bxAEBoGFGbo9K0SDC7ILNCwUakyej7K/cBkL8twPI%2bPHwLApSMgftmmEOmXbYkDdlne4%2bdj8XeKU84DnBO3NIhDSn5fC5UWgEidFjqbqytDBnWKaoShf6TWQACIAYmrjqn7gM%2bRjWpBjsfdnHnFINHh4j0u7jHaRFFitSXQSIGFmWqokmg8IHwnD%2blCyELIUkY3In5aLGO1FZ%2bDkroW9%2bGysm7Uc9CLdtB7503L1/kQr9qAaq6VqamNWfRi8F2LSex%2bTFyztfZ74kFKFmJVNaNs8/0Gc5dTXl7SarIJseAuQ49xE0M%2bCnr1GcB7znlJlpMX%2bqy1Y1gecWeLAbQ5UWBUkI1qrSr6ty0fuvn8i7qvKI8JOU%2brTxad8Pk5Z2VNsdEAOle%2b2NUtCU8X85yGmteP5kFLmsMoKA2Z5GUT07dEuJQ70wLuAWtF5dcXBwDWrkBgQlfA2TLWl/P3xEXYkBzE8RFJ52mZDRgHioFp7DPRXBIz/AQ1ox5raNSh8QkUNR2vDcf2ObVhk8sACwAIJuRSUcUrhPKNDWZAgEpUmgUqj00bYpWtUhTwC69NGWsevxmY5AYh8Whf0IkRr2lqn46Ud0Jnda%2bz9ygcn12ylsqhUxZHLAA1UJaz0mFwDXh2wpdtDgqOC4L6XcByESrqdcl9XQfV3ZRB7S2U5wr%2bWXRoxpgCqAAjADA7lC5jvOozHw1NJ3Eaat5Wheio1aXepzOrA1bHg5pOe2y%2bZRPFmppMmVM0VbLUcxfsvmTuxAVqEaXS0/G8thX54EEY%2baPiSOdg/DTumpHYcJCf9neTxzErK4fymkqGqtuvZbm0o9HVo66n6D5dyqI75wAaxaSyD4aWaZFrsFJ5dIbhJrevGJb%2beb/25dPL0COYg4CcCGzdib9pRx4NyXVwriKqqnqR5xsf/GmbdfiPPlUpcSFUtoDieeF%2bx09dcwZiqK3SOwR5roiifoqGbjgcRs2Y50PGemLDOlqIEWbVU01Z0PL6kE8oQvhRLYisdaXPhyqu6aPmiIjvl0V1pDei3Q/JufqdIxjnx13aeAUjh8dM7JPSZQXXd4z2ognFICilNiCWApOK82GRWg1XHo2Cz4NzSTaSdSz4hfZLIIturvofhnGRUjzo904LzX/Vs7E6w8cBvW/Xlt/HzCLq8r8TIIgRk3aKzG9hwoeVg7rV%2bf/vwXo%2b1vAfG8ADgCJNRcqRwSPSzlUXKPiR0%2bbMaCqRtlggGJ5oMtbtL6OlSXnzWrR%2bf3JfDXAIcp8Xh%2bnpRdyAMR/FWGZ1JMyn50vlNX9iFJiZGFZhUyWKDynqJpZP9NWRWyqe2l%2bBJwv%2bpHejGEupeeyarr1p%2bXlG9FkftaQV%2b6LD3fPP7r%2b73%2b/%2bZ//%2bEq6/vDf7Jcfu7sbXvhN5uWuZb/%2b%2bOUn//X6%2bkOaHOvk1CSneqUmPVXJmcWnMjqW0enz5O1fCJaoJldNpnn%2bvjTxXCDNkeD/AG8U6H%2bYZlD%2bAAAAAElFTkSuQmCC' /%3e%3c/svg%3e\" width=\"886\" data-srcset=\"/assets/static/popup-toggle.82a2fbd.29a4d976287230be583665977bbb747f.png 480w, /assets/static/popup-toggle.5ff7e36.29a4d976287230be583665977bbb747f.png 886w\" data-sizes=\"(max-width: 886px) 100vw, 886px\" data-src=\"/assets/static/popup-toggle.5ff7e36.29a4d976287230be583665977bbb747f.png\"><noscript><img class=\"g-image g-image--lazy g-image--loaded\" src=\"/assets/static/popup-toggle.5ff7e36.29a4d976287230be583665977bbb747f.png\" width=\"886\"></noscript></p>\n<p>Unfortunately, here we only see the generated JS code. There is an <a href=\"https://bugzilla.mozilla.org/show_bug.cgi?id=1418798\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">open issue</a> on the Firefox bugtracker, so hopefully this is fixed soon.</p>\n<p>For debugging other types of scripts, take a look at <a href=\"https://developer.mozilla.org/en-US/Add-ons/WebExtensions/Debugging\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://developer.mozilla.org/en-US/Add-ons/WebExtensions/Debugging</a>.\nConclusion</p>\n<p>In this post we saw how to write a moderately complex Firefox extension in Kotlin. During our journey we needed to solve a couple of problems:</p>\n<ul>\n<li>To generate multiple JS output files, we needed to make multiple modules.</li>\n<li>To call externally defined APIs we needed to either write the definitions by hand or to give up type safety.</li>\n<li>To create JS objects, we needed a magical function to write some plain JS</li>\n</ul>\n<p>Aside from those, the coding experience was quite pleasant. Kotlin’s syntax and language features made the code concise and fun to write.</p>\n<p><strong>UPDATE</strong>: To make calling the WebExtensions API easier, I’ve created a tool that programmatically generates the declarations from the official schema. You can simply include the declarations by following the instructions at <a href=\"https://github.com/cypressious/kotlin-webextensions-declarations\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://github.com/cypressious/kotlin-webextensions-declarations</a>.</p>\n","date":"27 November 2017","timeToRead":8,"twitter":"https://twitter.com/Cypressious/status/935239599147888640"}},"context":{}}